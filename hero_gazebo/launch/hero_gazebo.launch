<launch>
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="verbose" value="true"/>
    <!--arg name="paused" value="true"/-->
    <arg name="use_sim_time" value="true"/>
    <arg name="world_name" value="$(find hero_gazebo)/worlds/hero.world"/>
    <!-- more default parameters can be changed here -->
  </include>

  <!-- Convert an xacro and put on parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find hero_description)/robot/hero.urdf.xacro" />

  <!-- Spawn a robot into Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model hero -x $(arg x) -y $(arg y) -z $(arg z) -param robot_description" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="40.0" />
  </node>

  <node name="blink_controller" pkg="hero_description" type="blink_controller.py" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
  <!--rosparam file="$(find hero_description)/config/hero_control.yaml" command="load"/-->

   <!-- load the controllers -->
  <!-- The controller_spawner node starts the two wheel/joint position controllers for the robot by running a python script that makes a service call to the ros_control controller manager. 
  The service calls tell the controller manager which controllers you want. It also loads a third controller that publishes the joint states of all the joints with hardware_interfaces and advertises the topic on /joint_states. -->
  <!--node name="controller_spawner"
        pkg="controller_manager"
        type="spawner" 
        respawn="false"
        args="hero_controller"
        output="screen"
  /-->

  <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /-->

</launch>
