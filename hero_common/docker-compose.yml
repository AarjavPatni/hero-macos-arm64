version: "3.9"

services:
  # Small, shared ROS master that all other services talk to
  roscore:
    image: ros:noetic-ros-core
    container_name: roscore
    command: ["roscore"]
    ports:
      - "11311:11311"

  # Full Linux desktop in your browser (noVNC) to run Gazebo/RViz/rqt
  gui:
    build:
      context: .
      dockerfile: ros1.dockerfile    # <- the VNC/desktop Dockerfile we created
    container_name: ros_noetic_gui
    environment:
      - DISPLAY=:1
      - QT_X11_NO_MITSHM=1
      - ROS_MASTER_URI=http://roscore:11311
      - ROS_IP=gui
    depends_on:
      - roscore
    ports:
      - "8080:8080"   # noVNC in your browser (http://localhost:8080)
      - "5901:5901"   # optional: direct VNC client
    volumes:
      - .:/catkin_ws  # mount your workspace into the container
    command: /usr/local/bin/start-vnc

  # Headless launcher (fast). Put your bringup or gzserver here.
  sim:
    image: ros:noetic
    container_name: ros_noetic_sim
    depends_on:
      - roscore
    environment:
      - ROS_MASTER_URI=http://roscore:11311
      - ROS_IP=sim
    volumes:
      - .:/catkin_ws
    working_dir: /catkin_ws
    command: >
      bash -lc "
      source /opt/ros/noetic/setup.bash &&
      source /catkin_ws/devel/setup.bash ||
      true &&
      # Example headless sim (classic Gazebo server only):
      gazebo --verbose --server
      "

  # Optional: Foxglove/rviz-lite via rosbridge (for headless visualization)
  rosbridge:
    image: ros:noetic
    container_name: ros_noetic_rosbridge
    depends_on:
      - roscore
    environment:
      - ROS_MASTER_URI=http://roscore:11311
      - ROS_IP=rosbridge
    ports:
      - "9090:9090"   # ws://localhost:9090 in Foxglove Studio
    command: >
      bash -lc "
      apt-get update &&
      apt-get install -y ros-noetic-rosbridge-server &&
      source /opt/ros/noetic/setup.bash &&
      roslaunch rosbridge_server rosbridge_websocket.launch
      "

